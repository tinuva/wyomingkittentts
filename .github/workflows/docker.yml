name: Build and (optionally) Push Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - "server/**"
      - "docker-compose.yaml"
      - ".github/workflows/docker.yml"
  pull_request:
    branches: [ main, master ]
    paths:
      - "server/**"
      - "docker-compose.yaml"
      - ".github/workflows/docker.yml"
  workflow_dispatch:
    inputs:
      push:
        description: "Push image to registry"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]
      image_tag:
        description: "Tag to use (default: <short-sha>)"
        required: false
        type: string

env:
  IMAGE_NAME: wy-kittentts
  REGISTRY: ghcr.io
  # Set default owner from the repository if not provided explicitly
  IMAGE_OWNER: ${{ github.repository_owner }}

jobs:
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute image tags
        id: meta
        run: |
          # Sanitize owner to lowercase
          OWNER_LC="$(echo "${{ env.IMAGE_OWNER }}" | tr '[:upper:]' '[:lower:]')"
          IMAGE="${{ env.REGISTRY }}/${OWNER_LC}/${{ env.IMAGE_NAME }}"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"

          # Determine tag
          SHORT_SHA="${GITHUB_SHA::7}"
          INPUT_TAG="${{ github.event.inputs.image_tag }}"
          if [ -n "${INPUT_TAG}" ]; then
            TAG="${INPUT_TAG}"
          else
            TAG="${SHORT_SHA}"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

          # Determine if pushing is enabled
          # Push on workflow_dispatch if input push == true, otherwise push on main/master branch pushes
          PUSH_INPUT="${{ github.event.inputs.push }}"
          if [ "${PUSH_INPUT}" = "true" ]; then
            PUSH="true"
          elif [ "${{ github.event_name }}" = "push" ]; then
            # Only push on push to main/master
            BR="${{ github.ref_name }}"
            if [ "${BR}" = "main" ] || [ "${BR}" = "master" ]; then
              PUSH="true"
            else
              PUSH="false"
            fi
          else
            PUSH="false"
          fi
          echo "push=${PUSH}" >> "$GITHUB_OUTPUT"

          # Build a label list
          echo "labels=org.opencontainers.image.source=${{ github.repository }},org.opencontainers.image.revision=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        if: steps.meta.outputs.push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (and maybe push)
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: ${{ steps.meta.outputs.push }}
          platforms: linux/amd64
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image reference
        run: |
          echo "Image: ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}"
          if [ "${{ steps.meta.outputs.push }}" = "true" ]; then
            echo "Image has been pushed to ${{ env.REGISTRY }}"
          else
            echo "Image built locally within CI (not pushed)."
          fi

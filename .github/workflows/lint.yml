name: Lint (Python)

on:
  push:
    branches: [ main, master ]
    paths:
      - "server/**"
      - "client/**"
      - ".pre-commit-config.yaml"
      - ".github/workflows/lint.yml"
  pull_request:
    branches: [ main, master ]
    paths:
      - "server/**"
      - "client/**"
      - ".pre-commit-config.yaml"
      - ".github/workflows/lint.yml"
  workflow_dispatch: {}

jobs:
  lint:
    name: Run pre-commit (black, isort, flake8, ruff, yesqa, hooks)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pre-commit and tooling
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit mypy

      - name: Install server runtime deps (for import/type checking)
        run: |
          # Best effort: install minimal deps so linters can import modules if needed.
          # We don't need heavy optional deps; this speeds up CI.
          if [ -f server/requirements.txt ]; then
            pip install -r server/requirements.txt || true
          fi

      - name: Pre-commit run (all files)
        run: |
          pre-commit run --all-files

      - name: Mypy (server and client)
        continue-on-error: true
        run: |
          mypy --ignore-missing-imports --install-types --non-interactive server client

  flake8-only:
    name: Flake8 (focused)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install flake8 and plugins
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-bugbear flake8-comprehensions

      - name: Run flake8
        run: |
          flake8 --max-line-length=100 --extend-ignore=E203,W503 --select=B,C,E,F,W,B9 --show-source server client
